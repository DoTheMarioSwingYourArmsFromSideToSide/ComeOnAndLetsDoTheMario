var _____WB$wombat$assign$function_____ = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };
if (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }
{
  let window = _____WB$wombat$assign$function_____("window");
  let self = _____WB$wombat$assign$function_____("self");
  let document = _____WB$wombat$assign$function_____("document");
  let location = _____WB$wombat$assign$function_____("location");
  let top = _____WB$wombat$assign$function_____("top");
  let parent = _____WB$wombat$assign$function_____("parent");
  let frames = _____WB$wombat$assign$function_____("frames");
  let opener = _____WB$wombat$assign$function_____("opener");

/**
 * This file contains utility methods for accessing, setting and modifying Cookies.
 **/
/* namspace gmds */
var gmds = gmds || 
{ 

};

/**
	sets a cookie to a value
	name: the name of the cookie
	value: the value to store within the cookie
	validity: (optional) the duration of validity for this cookie (in ms)
	path: (optional) the path for which the cookie is valid
	domain: (optional) the domain for which the cookie is valid
*/
gmds.setCookie = function(/*String*/name, /*String*/value, /*int*/validity, /*String*/path, /*String*/domain, /*boolean*/secure )
{
	var cookie_string = name + "=" + escape (value);
	if (validity) {
		var curDate = new Date();
		var expiry = new Date(curDate.getTime() + validity);
		cookie_string += "; expires=" + expiry.toGMTString();
	}
	if (path) {
		cookie_string += "; path=" + escape (path);
	}
	if (domain) {
		cookie_string += "; domain=" + escape (domain);
	}
	if (secure) {
		cookie_string += "; secure";
	}
	document.cookie = cookie_string;
};


/**
	deletes a cookie
	name: the name of the cookie to delete
*/
gmds.deleteCookie = function(/*String*/name)
{
	var cookie_date = new Date ( );  // current date & time
	cookie_date.setTime ( cookie_date.getTime() - 1 );
	document.cookie = name += "=; expires=" + cookie_date.toGMTString();
};

/**
	gets a cookie value
	name: the name of the cookie whose value should be retrieved
*/
/*String*/ gmds.getCookie = function(/*String*/name)
{
	var results = document.cookie.match(name + '=(.*?)(;|$)');
	
	if (results)  {
		return (unescape(results[1]));
	}
	else {
		return null;
	}
};

}
/*
     FILE ARCHIVED ON 22:44:20 Aug 11, 2012 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 01:57:20 May 01, 2023.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  captures_list: 173.723
  exclusion.robots: 0.196
  exclusion.robots.policy: 0.175
  cdx.remote: 0.13
  esindex: 0.017
  LoadShardBlock: 127.927 (3)
  PetaboxLoader3.datanode: 84.378 (4)
  PetaboxLoader3.resolve: 83.963 (3)
  load_resource: 67.644
*/