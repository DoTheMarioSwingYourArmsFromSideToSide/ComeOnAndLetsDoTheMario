var _____WB$wombat$assign$function_____ = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };
if (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }
{
  let window = _____WB$wombat$assign$function_____("window");
  let self = _____WB$wombat$assign$function_____("self");
  let document = _____WB$wombat$assign$function_____("document");
  let location = _____WB$wombat$assign$function_____("location");
  let top = _____WB$wombat$assign$function_____("top");
  let parent = _____WB$wombat$assign$function_____("parent");
  let frames = _____WB$wombat$assign$function_____("frames");
  let opener = _____WB$wombat$assign$function_____("opener");

var mboxCopyright = "Copyright 1996-2014. Adobe Systems Incorporated. All rights reserved."; var TNT = TNT || {}; TNT.a = TNT.a || {}; TNT.a.nestedMboxes = []; TNT.a.isDomLoaded = false; TNT.getGlobalMboxName = function () { return "GM_Global_Standard"; }; TNT.getGlobalMboxLocation = function () { return ""; }; TNT.isAutoCreateGlobalMbox = function () { return false; }; TNT.getClientMboxExtraParameters = function () { return ""; }; TNT.a.b = function () { var c = {}.toString; var d = window.targetPageParams; var e = null; if (typeof (d) === 'undefined' || c.call(d) !== '[object Function]') { return []; } try { e = d(); } catch (f) { } if (e === null) { return []; } if (c.call(e) === '[object Array]') { return e; } if (c.call(e) === '[object String]' && e.length > 0) { var g = e.trim().split("&"); for (var h = 0; h < g.length; h++) { if (g[h].indexOf('=') <= 0) { g.splice(h, 1); continue; } g[h] = decodeURIComponent(g[h]); } return g; } if (c.call(e) === '[object Object]') { return TNT.a.i([], e); } return []; }; TNT.a.i = function (j, k) { var l = []; var m = j.join('.'); var n = undefined; for (o in k) { if (!k.hasOwnProperty(o)) { continue; } n = k[o]; if (typeof n === "object") { j.push(o); var p = TNT.a.i(j, n); j.pop(); for (var h = 0; h < p.length; h++) { l.push(p[h]); } continue; } l.push((m.length > 0 ? m + '.' : '') + o + '=' + n); } return l; }; mboxUrlBuilder = function (q, r) { this.q = q; this.r = r; this.s = new Array(); this.t = function (u) { return u; }; this.v = null; }; mboxUrlBuilder.prototype.addNewParameter = function (w, x) { this.s.push({ name: w, value: x }); return this; }; mboxUrlBuilder.prototype.addParameterIfAbsent = function (w, x) { if (x) { for (var y = 0; y < this.s.length; y++) { var z = this.s[y]; if (z.name === w) { return this; } } this.checkInvalidCharacters(w); return this.addNewParameter(w, x); } }; mboxUrlBuilder.prototype.addParameter = function (w, x) { this.checkInvalidCharacters(w); for (var y = 0; y < this.s.length; y++) { var z = this.s[y]; if (z.name === w) { z.value = x; return this; } } return this.addNewParameter(w, x); }; mboxUrlBuilder.prototype.addParameters = function (s) { if (!s) { return this; } for (var y = 0; y < s.length; y++) { var A = s[y].indexOf('='); if (A == -1 || A == 0) { continue; } this.addParameter(s[y].substring(0, A), s[y].substring(A + 1, s[y].length)); } return this; }; mboxUrlBuilder.prototype.setServerType = function (B) { this.C = B; }; mboxUrlBuilder.prototype.setBasePath = function (v) { this.v = v; }; mboxUrlBuilder.prototype.setUrlProcessAction = function (D) { this.t = D; }; mboxUrlBuilder.prototype.buildUrl = function () { var E = this.v ? this.v : '/m2/' + this.r + '/mbox/' + this.C; var F = document.location.protocol == 'file:' ? 'http:' : document.location.protocol; var u = F + "//" + this.q + E; var G = u.indexOf('?') != -1 ? '&' : '?'; for (var y = 0; y < this.s.length; y++) { var z = this.s[y]; u += G + encodeURIComponent(z.name) + '=' + encodeURIComponent(z.value); G = '&'; } return this.H(this.t(u)); }; mboxUrlBuilder.prototype.getParameters = function () { return this.s; }; mboxUrlBuilder.prototype.setParameters = function (s) { this.s = s; }; mboxUrlBuilder.prototype.clone = function () { var I = new mboxUrlBuilder(this.q, this.r); I.setServerType(this.C); I.setBasePath(this.v); I.setUrlProcessAction(this.t); for (var y = 0; y < this.s.length; y++) { I.addParameter(this.s[y].name, this.s[y].value); } return I; }; mboxUrlBuilder.prototype.H = function (J) { return J.replace(/\"/g, '&quot;').replace(/>/g, '&gt;'); }; mboxUrlBuilder.prototype.checkInvalidCharacters = function (w) { var K = new RegExp('(\'|")'); if (K.exec(w)) { throw "Parameter '" + w + "' contains invalid characters"; } }; mboxStandardFetcher = function () { }; mboxStandardFetcher.prototype.getType = function () { return 'standard'; }; mboxStandardFetcher.prototype.fetch = function (L) { L.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + L.buildUrl() + '" language="JavaScript"><' + '\/scr' + 'ipt>'); }; mboxStandardFetcher.prototype.cancel = function () { }; mboxAjaxFetcher = function () { }; mboxAjaxFetcher.prototype.getType = function () { return 'ajax'; }; mboxAjaxFetcher.prototype.fetch = function (L) { L.setServerType(this.getType()); var u = L.buildUrl(); this.M = document.createElement('script'); this.M.src = u; document.body.appendChild(this.M); }; mboxAjaxFetcher.prototype.cancel = function () { }; mboxMap = function () { this.N = new Object(); this.O = new Array(); }; mboxMap.prototype.put = function (P, x) { if (!this.N[P]) { this.O[this.O.length] = P; } this.N[P] = x; }; mboxMap.prototype.get = function (P) { return this.N[P]; }; mboxMap.prototype.remove = function (P) { this.N[P] = undefined; var Q = []; for (var i = 0; i < this.O.length; i++) { if (this.O[i] !== P) { Q.push(this.O[i]) } } this.O = Q; }; mboxMap.prototype.each = function (D) { for (var y = 0; y < this.O.length; y++) { var P = this.O[y]; var x = this.N[P]; if (x) { var l = D(P, x); if (l === false) { break; } } } }; mboxMap.prototype.isEmpty = function () { return this.O.length === 0; }; mboxFactory = function (R, r, S) { this.T = false; this.R = R; this.S = S; this.U = new mboxList(); mboxFactories.put(S, this); this.V = typeof document.createElement('div').replaceChild != 'undefined' && (function () { return true; })() && typeof document.getElementById != 'undefined' && typeof (window.attachEvent || document.addEventListener || window.addEventListener) != 'undefined' && typeof encodeURIComponent != 'undefined'; this.W = this.V && mboxGetPageParameter('mboxDisable') == null; var X = S == 'default'; this.Y = new mboxCookieManager('mbox' + (X ? '' : ('-' + S)), (function () { return mboxCookiePageDomain(); })()); this.W = this.W && this.Y.isEnabled() && (this.Y.getCookie('disable') == null); if (this.isAdmin()) { this.enable(); } this.Z(); this._ = mboxGenerateId(); this.ab = mboxScreenHeight(); this.bb = mboxScreenWidth(); this.cb = mboxBrowserWidth(); this.db = mboxBrowserHeight(); this.eb = mboxScreenColorDepth(); this.fb = mboxBrowserTimeOffset(); this.gb = new mboxSession(this._, 'mboxSession', 'session', 31 * 60, this.Y); this.hb = new mboxPC('PC', 1209600, this.Y); this.L = new mboxUrlBuilder(R, r); this.ib(this.L, X); this.jb = new Date().getTime(); this.kb = this.jb; var lb = this; this.addOnLoad(function () { lb.kb = new Date().getTime(); }); if (this.V) { this.addOnLoad(function () { lb.T = true; lb.getMboxes().each(function (mb) { mb.nb(); mb.setFetcher(new mboxAjaxFetcher()); mb.finalize(); }); TNT.a.nestedMboxes = []; TNT.a.isDomLoaded = true; }); if (this.W) { this.limitTraffic(100, 10368000); this.ob(); this.pb = new mboxSignaler(function (qb, s) { return lb.create(qb, s); }, this.Y); } } }; mboxFactory.prototype.isEnabled = function () { return this.W; }; mboxFactory.prototype.getDisableReason = function () { return this.Y.getCookie('disable'); }; mboxFactory.prototype.isSupported = function () { return this.V; }; mboxFactory.prototype.disable = function (rb, sb) { if (typeof rb == 'undefined') { rb = 60 * 60; } if (typeof sb == 'undefined') { sb = 'unspecified'; } if (!this.isAdmin()) { this.W = false; this.Y.setCookie('disable', sb, rb); } }; mboxFactory.prototype.enable = function () { this.W = true; this.Y.deleteCookie('disable'); }; mboxFactory.prototype.isAdmin = function () { return document.location.href.indexOf('mboxEnv') != -1; }; mboxFactory.prototype.limitTraffic = function (tb, rb) { }; mboxFactory.prototype.addOnLoad = function (ub) { if (this.isDomLoaded()) { ub(); } else { var vb = false; var wb = function () { if (vb) { return; } vb = true; ub(); }; this.xb.push(wb); if (this.isDomLoaded() && !vb) { wb(); } } }; mboxFactory.prototype.getEllapsedTime = function () { return this.kb - this.jb; }; mboxFactory.prototype.getEllapsedTimeUntil = function (yb) { return yb - this.jb; }; mboxFactory.prototype.getMboxes = function () { return this.U; }; mboxFactory.prototype.get = function (qb, zb) { return this.U.get(qb).getById(zb || 0); }; mboxFactory.prototype.update = function (qb, s) { if (!this.isEnabled()) { return; } if (!this.isDomLoaded()) { var lb = this; this.addOnLoad(function () { lb.update(qb, s); }); return; } if (this.U.get(qb).length() == 0) { throw "Mbox " + qb + " is not defined"; } this.U.get(qb).each(function (mb) { mb.getUrlBuilder().addParameter('mboxPage', mboxGenerateId()); mboxFactoryDefault.setVisitorIdParameters(mb.getUrlBuilder(), qb); mb.load(s); }); }; mboxFactory.prototype.setVisitorIdParameters = function (u, qb) { var imsOrgId = '757A02BE532B22BA0A490D4C@AdobeOrg'; if (typeof Visitor == 'undefined' || imsOrgId.length == 0) { return; } var visitor = Visitor.getInstance(imsOrgId); if (visitor.isAllowed()) { var addVisitorValueToUrl = function (param, getter, mboxName) { if (visitor[getter]) { var callback = function (value) { if (value) { u.addParameter(param, value); } }; var value; if (typeof mboxName != 'undefined') { value = visitor[getter]("mbox:" + mboxName); } else { value = visitor[getter](callback); } callback(value); } }; addVisitorValueToUrl('mboxMCGVID', "getMarketingCloudVisitorID"); addVisitorValueToUrl('mboxMCGLH', "getAudienceManagerLocationHint"); addVisitorValueToUrl('mboxAAMB', "getAudienceManagerBlob"); addVisitorValueToUrl('mboxMCAVID', "getAnalyticsVisitorID"); addVisitorValueToUrl('mboxMCSDID', "getSupplementalDataID", qb); } }; mboxFactory.prototype.create = function (qb, s, Ab) { if (!this.isSupported()) { return null; } var u = this.L.clone(); u.addParameter('mboxCount', this.U.length() + 1); u.addParameters(s); this.setVisitorIdParameters(u, qb); var zb = this.U.get(qb).length(); var Bb = this.S + '-' + qb + '-' + zb; var Cb; if (Ab) { Cb = new mboxLocatorNode(Ab); } else { if (this.T) { throw 'The page has already been loaded, can\'t write marker'; } Cb = new mboxLocatorDefault(Bb); } try { var lb = this; var Db = 'mboxImported-' + Bb; var mb = new mbox(qb, zb, u, Cb, Db); if (this.W) { mb.setFetcher(this.T ? new mboxAjaxFetcher() : new mboxStandardFetcher()); } mb.setOnError(function (Eb, B) { mb.setMessage(Eb); mb.activate(); if (!mb.isActivated()) { lb.disable(60 * 60, Eb); window.location.reload(false); } }); this.U.add(mb); } catch (Fb) { this.disable(); throw 'Failed creating mbox "' + qb + '", the error was: ' + Fb; } var Gb = new Date(); u.addParameter('mboxTime', Gb.getTime() - (Gb.getTimezoneOffset() * 60000)); return mb; }; mboxFactory.prototype.getCookieManager = function () { return this.Y; }; mboxFactory.prototype.getPageId = function () { return this._; }; mboxFactory.prototype.getPCId = function () { return this.hb; }; mboxFactory.prototype.getSessionId = function () { return this.gb; }; mboxFactory.prototype.getSignaler = function () { return this.pb; }; mboxFactory.prototype.getUrlBuilder = function () { return this.L; }; mboxFactory.prototype.ib = function (u, X) { u.addParameter('mboxHost', document.location.hostname).addParameter('mboxSession', this.gb.getId()); if (!X) { u.addParameter('mboxFactoryId', this.S); } if (this.hb.getId() != null) { u.addParameter('mboxPC', this.hb.getId()); } u.addParameter('mboxPage', this._); u.addParameter('screenHeight', this.ab); u.addParameter('screenWidth', this.bb); u.addParameter('browserWidth', this.cb); u.addParameter('browserHeight', this.db); u.addParameter('browserTimeOffset', this.fb); u.addParameter('colorDepth', this.eb); u.addParameter('mboxXDomain', "enabled"); u.setUrlProcessAction(function (u) { u += '&mboxURL=' + encodeURIComponent(document.location); var Hb = encodeURIComponent(document.referrer); if (u.length + Hb.length < 2000) { u += '&mboxReferrer=' + Hb; } u += '&mboxVersion=' + mboxVersion; return u; }); }; mboxFactory.prototype.Ib = function () { return ""; }; mboxFactory.prototype.ob = function () { document.write('<style>.' + 'mboxDefault' + ' { visibility:hidden; }</style>'); }; mboxFactory.prototype.isDomLoaded = function () { return this.T; }; mboxFactory.prototype.Z = function () { if (this.xb != null) { return; } this.xb = new Array(); var lb = this; (function () { var Jb = document.addEventListener ? "DOMContentLoaded" : "onreadystatechange"; var Kb = false; var Lb = function () { if (Kb) { return; } Kb = true; for (var i = 0; i < lb.xb.length; ++i) { lb.xb[i](); } }; if (document.addEventListener) { document.addEventListener(Jb, function () { document.removeEventListener(Jb, arguments.callee, false); Lb(); }, false); window.addEventListener("load", function () { document.removeEventListener("load", arguments.callee, false); Lb(); }, false); } else if (document.attachEvent) { if (self !== self.top) { document.attachEvent(Jb, function () { if (document.readyState === 'complete') { document.detachEvent(Jb, arguments.callee); Lb(); } }); } else { var Mb = function () { try { document.documentElement.doScroll('left'); Lb(); } catch (Nb) { setTimeout(Mb, 13); } }; Mb(); } } if (document.readyState === "complete") { Lb(); } })(); }; mboxSignaler = function (Ob, Y) { this.Y = Y; var Pb = Y.getCookieNames('signal-'); for (var y = 0; y < Pb.length; y++) { var Qb = Pb[y]; var Rb = Y.getCookie(Qb).split('&'); var mb = Ob(Rb[0], Rb); mb.load(); Y.deleteCookie(Qb); } }; mboxSignaler.prototype.signal = function (Sb, qb) { this.Y.setCookie('signal-' + Sb, mboxShiftArray(arguments).join('&'), 45 * 60); }; mboxList = function () { this.U = new Array(); }; mboxList.prototype.add = function (mb) { if (mb != null) { this.U[this.U.length] = mb; } }; mboxList.prototype.get = function (qb) { var l = new mboxList(); for (var y = 0; y < this.U.length; y++) { var mb = this.U[y]; if (mb.getName() == qb) { l.add(mb); } } return l; }; mboxList.prototype.getById = function (h) { return this.U[h]; }; mboxList.prototype.length = function () { return this.U.length; }; mboxList.prototype.each = function (D) { if (typeof D !== 'function') { throw 'Action must be a function, was: ' + typeof (D); } for (var y = 0; y < this.U.length; y++) { D(this.U[y]); } }; mboxLocatorDefault = function (w) { this.w = 'mboxMarker-' + w; document.write('<div id="' + this.w + '" style="visibility:hidden;display:none">&nbsp;</div>'); }; mboxLocatorDefault.prototype.locate = function () { var Tb = document.getElementById(this.w); while (Tb != null) { if (Tb.nodeType == 1) { if (Tb.className == 'mboxDefault') { return Tb; } } Tb = Tb.previousSibling; } return null; }; mboxLocatorDefault.prototype.force = function () { var Ub = document.createElement('div'); Ub.className = 'mboxDefault'; var Vb = document.getElementById(this.w); if (Vb) { Vb.parentNode.insertBefore(Ub, Vb); } return Ub; }; mboxLocatorNode = function (Wb) { this.Tb = Wb; }; mboxLocatorNode.prototype.locate = function () { return typeof this.Tb == 'string' ? document.getElementById(this.Tb) : this.Tb; }; mboxLocatorNode.prototype.force = function () { return null; }; mboxCreate = function (qb) { var mb = mboxFactoryDefault.create(qb, mboxShiftArray(arguments)); if (mb) { mb.load(); } return mb; }; mboxDefine = function (Ab, qb) { var mb = mboxFactoryDefault.create(qb, mboxShiftArray(mboxShiftArray(arguments)), Ab); return mb; }; mboxUpdate = function (qb) { mboxFactoryDefault.update(qb, mboxShiftArray(arguments)); }; mbox = function (w, Xb, L, Yb, Db) { this.Zb = null; this._b = 0; this.Cb = Yb; this.Db = Db; this.ac = null; this.bc = new mboxOfferContent(); this.Ub = null; this.L = L; this.message = ''; this.cc = new Object(); this.dc = 0; this.Xb = Xb; this.w = w; this.ec(); L.addParameter('mbox', w).addParameter('mboxId', Xb); this.fc = function () { }; this.gc = function () { }; this.hc = null; this.ic = document.documentMode >= 10 && !TNT.a.isDomLoaded; if (this.ic) { this.jc = TNT.a.nestedMboxes; this.jc.push(this.w); } }; mbox.prototype.getId = function () { return this.Xb; }; mbox.prototype.ec = function () { if (this.w.length > 250) { throw "Mbox Name " + this.w + " exceeds max length of " + "250 characters."; } else if (this.w.match(/^\s+|\s+$/g)) { throw "Mbox Name " + this.w + " has leading/trailing whitespace(s)."; } }; mbox.prototype.getName = function () { return this.w; }; mbox.prototype.getParameters = function () { var s = this.L.getParameters(); var l = new Array(); for (var y = 0; y < s.length; y++) { if (s[y].name.indexOf('mbox') != 0) { l[l.length] = s[y].name + '=' + s[y].value; } } return l; }; mbox.prototype.setOnLoad = function (D) { this.gc = D; return this; }; mbox.prototype.setMessage = function (Eb) { this.message = Eb; return this; }; mbox.prototype.setOnError = function (fc) { this.fc = fc; return this; }; mbox.prototype.setFetcher = function (kc) { if (this.ac) { this.ac.cancel(); } this.ac = kc; return this; }; mbox.prototype.getFetcher = function () { return this.ac; }; mbox.prototype.load = function (s) { if (this.ac == null) { return this; } this.setEventTime("load.start"); this.cancelTimeout(); this._b = 0; var L = (s && s.length > 0) ? this.L.clone().addParameters(s) : this.L; this.ac.fetch(L); var lb = this; this.lc = setTimeout(function () { lb.fc('browser timeout', lb.ac.getType()); }, 15000); this.setEventTime("load.end"); return this; }; mbox.prototype.loaded = function () { this.cancelTimeout(); if (!this.activate()) { var lb = this; setTimeout(function () { lb.loaded(); }, 100); } }; mbox.prototype.activate = function () { if (this._b) { return this._b; } this.setEventTime('activate' + ++this.dc + '.start'); if (this.ic && this.jc[this.jc.length - 1] !== this.w) { return this._b; } if (this.show()) { this.cancelTimeout(); this._b = 1; } this.setEventTime('activate' + this.dc + '.end'); if (this.ic) { this.jc.pop(); } return this._b; }; mbox.prototype.isActivated = function () { return this._b; }; mbox.prototype.setOffer = function (bc) { if (bc && bc.show && bc.setOnLoad) { this.bc = bc; } else { throw 'Invalid offer'; } return this; }; mbox.prototype.getOffer = function () { return this.bc; }; mbox.prototype.show = function () { this.setEventTime('show.start'); var l = this.bc.show(this); this.setEventTime(l == 1 ? "show.end.ok" : "show.end"); return l; }; mbox.prototype.showContent = function (mc) { if (mc == null) { return 0; } if (this.Ub == null || !this.Ub.parentNode) { this.Ub = this.getDefaultDiv(); if (this.Ub == null) { return 0; } } if (this.Ub != mc) { this.nc(this.Ub); this.Ub.parentNode.replaceChild(mc, this.Ub); this.Ub = mc; } this.oc(mc); this.gc(); return 1; }; mbox.prototype.hide = function () { this.setEventTime('hide.start'); var l = this.showContent(this.getDefaultDiv()); this.setEventTime(l == 1 ? 'hide.end.ok' : 'hide.end.fail'); return l; }; mbox.prototype.finalize = function () { this.setEventTime('finalize.start'); this.cancelTimeout(); if (this.getDefaultDiv() == null) { if (this.Cb.force() != null) { this.setMessage('No default content, an empty one has been added'); } else { this.setMessage('Unable to locate mbox'); } } if (!this.activate()) { this.hide(); this.setEventTime('finalize.end.hide'); } this.setEventTime('finalize.end.ok'); }; mbox.prototype.cancelTimeout = function () { if (this.lc) { clearTimeout(this.lc); } if (this.ac != null) { this.ac.cancel(); } }; mbox.prototype.getDiv = function () { return this.Ub; }; mbox.prototype.getDefaultDiv = function () { if (this.hc == null) { this.hc = this.Cb.locate(); } return this.hc; }; mbox.prototype.setEventTime = function (pc) { this.cc[pc] = (new Date()).getTime(); }; mbox.prototype.getEventTimes = function () { return this.cc; }; mbox.prototype.getImportName = function () { return this.Db; }; mbox.prototype.getURL = function () { return this.L.buildUrl(); }; mbox.prototype.getUrlBuilder = function () { return this.L; }; mbox.prototype.qc = function (Ub) { return Ub.style.display != 'none'; }; mbox.prototype.oc = function (Ub) { this.rc(Ub, true); }; mbox.prototype.nc = function (Ub) { this.rc(Ub, false); }; mbox.prototype.rc = function (Ub, sc) { Ub.style.visibility = sc ? "visible" : "hidden"; Ub.style.display = sc ? "block" : "none"; }; mbox.prototype.nb = function () { this.ic = false; }; mbox.prototype.relocateDefaultDiv = function () { this.hc = this.Cb.locate(); }; mboxOfferContent = function () { this.gc = function () { }; }; mboxOfferContent.prototype.show = function (mb) { var l = mb.showContent(document.getElementById(mb.getImportName())); if (l == 1) { this.gc(); } return l; }; mboxOfferContent.prototype.setOnLoad = function (gc) { this.gc = gc; }; mboxOfferAjax = function (mc) { this.mc = mc; this.gc = function () { }; }; mboxOfferAjax.prototype.setOnLoad = function (gc) { this.gc = gc; }; mboxOfferAjax.prototype.show = function (mb) { var tc = document.createElement('div'); tc.id = mb.getImportName(); tc.innerHTML = this.mc; var l = mb.showContent(tc); if (l == 1) { this.gc(); } return l; }; mboxOfferDefault = function () { this.gc = function () { }; }; mboxOfferDefault.prototype.setOnLoad = function (gc) { this.gc = gc; }; mboxOfferDefault.prototype.show = function (mb) { var l = mb.hide(); if (l == 1) { this.gc(); } return l; }; mboxCookieManager = function mboxCookieManager(w, uc) { this.w = w; this.uc = uc == '' || uc.indexOf('.') == -1 ? '' : '; domain=' + uc; this.vc = new mboxMap(); this.loadCookies(); }; mboxCookieManager.prototype.isEnabled = function () { this.setCookie('check', 'true', 60); this.loadCookies(); return this.getCookie('check') == 'true'; }; mboxCookieManager.prototype.setCookie = function (w, x, rb) { if (typeof w != 'undefined' && typeof x != 'undefined' && typeof rb != 'undefined') { var wc = new Object(); wc.name = w; wc.value = escape(x); wc.expireOn = Math.ceil(rb + new Date().getTime() / 1000); this.vc.put(w, wc); this.saveCookies(); } }; mboxCookieManager.prototype.getCookie = function (w) { var wc = this.vc.get(w); return wc ? unescape(wc.value) : null; }; mboxCookieManager.prototype.deleteCookie = function (w) { this.vc.remove(w); this.saveCookies(); }; mboxCookieManager.prototype.getCookieNames = function (xc) { var yc = new Array(); this.vc.each(function (w, wc) { if (w.indexOf(xc) == 0) { yc[yc.length] = w; } }); return yc; }; mboxCookieManager.prototype.saveCookies = function () { var zc = false; var Ac = 'disable'; var Bc = new Array(); var Cc = 0; this.vc.each(function (w, wc) { if (!zc || w === Ac) { Bc[Bc.length] = w + '#' + wc.value + '#' + wc.expireOn; if (Cc < wc.expireOn) { Cc = wc.expireOn; } } }); var Dc = new Date(Cc * 1000); document.cookie = this.w + '=' + Bc.join('|') + '; expires=' + Dc.toGMTString() + '; path=/' + this.uc; }; mboxCookieManager.prototype.loadCookies = function () { this.vc = new mboxMap(); var Ec = document.cookie.indexOf(this.w + '='); if (Ec != -1) { var Fc = document.cookie.indexOf(';', Ec); if (Fc == -1) { Fc = document.cookie.indexOf(',', Ec); if (Fc == -1) { Fc = document.cookie.length; } } var Gc = document.cookie.substring(Ec + this.w.length + 1, Fc).split('|'); var Hc = Math.ceil(new Date().getTime() / 1000); for (var y = 0; y < Gc.length; y++) { var wc = Gc[y].split('#'); if (Hc <= wc[2]) { var Ic = new Object(); Ic.name = wc[0]; Ic.value = wc[1]; Ic.expireOn = wc[2]; this.vc.put(Ic.name, Ic); } } } }; mboxSession = function (Jc, Kc, Qb, Lc, Y) { this.Kc = Kc; this.Qb = Qb; this.Lc = Lc; this.Y = Y; this.Mc = false; this.Xb = typeof mboxForceSessionId != 'undefined' ? mboxForceSessionId : mboxGetPageParameter(this.Kc); if (this.Xb == null || this.Xb.length == 0) { this.Xb = Y.getCookie(Qb); if (this.Xb == null || this.Xb.length == 0) { this.Xb = Jc; this.Mc = true; } } Y.setCookie(Qb, this.Xb, Lc); }; mboxSession.prototype.getId = function () { return this.Xb; }; mboxSession.prototype.forceId = function (Nc) { this.Xb = Nc; this.Y.setCookie(this.Qb, this.Xb, this.Lc); }; mboxPC = function (Qb, Lc, Y) { this.Qb = Qb; this.Lc = Lc; this.Y = Y; this.Xb = typeof mboxForcePCId != 'undefined' ? mboxForcePCId : Y.getCookie(Qb); if (this.Xb != null) { Y.setCookie(Qb, this.Xb, Lc); } }; mboxPC.prototype.getId = function () { return this.Xb; }; mboxPC.prototype.forceId = function (Nc) { if (this.Xb != Nc) { this.Xb = Nc; this.Y.setCookie(this.Qb, this.Xb, this.Lc); return true; } return false; }; mboxGetPageParameter = function (w) { var l = null; var Oc = new RegExp("\\?[^#]*" + w + "=([^\&;#]*)"); var Pc = Oc.exec(document.location); if (Pc != null && Pc.length >= 2) { l = Pc[1]; } return l; }; mboxSetCookie = function (w, x, rb) { return mboxFactoryDefault.getCookieManager().setCookie(w, x, rb); }; mboxGetCookie = function (w) { return mboxFactoryDefault.getCookieManager().getCookie(w); }; mboxCookiePageDomain = function () { var uc = (/([^:]*)(:[0-9]{0,5})?/).exec(document.location.host)[1]; var Qc = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/; if (!Qc.exec(uc)) { var Rc = (/([^\.]+\.[^\.]{3}|[^\.]+\.[^\.]+\.[^\.]{2})$/).exec(uc); if (Rc) { uc = Rc[0]; if (uc.indexOf("www.") == 0) { uc = uc.substr(4); } } } return uc ? uc : ""; }; mboxShiftArray = function (Sc) { var l = new Array(); for (var y = 1; y < Sc.length; y++) { l[l.length] = Sc[y]; } return l; }; mboxGenerateId = function () { return (new Date()).getTime() + "-" + Math.floor(Math.random() * 999999); }; mboxScreenHeight = function () { return screen.height; }; mboxScreenWidth = function () { return screen.width; }; mboxBrowserWidth = function () { return (window.innerWidth) ? window.innerWidth : document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth; }; mboxBrowserHeight = function () { return (window.innerHeight) ? window.innerHeight : document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight; }; mboxBrowserTimeOffset = function () { return -new Date().getTimezoneOffset(); }; mboxScreenColorDepth = function () { return screen.pixelDepth; }; if (typeof mboxVersion == 'undefined') { var mboxVersion = 53; var mboxFactories = new mboxMap(); var mboxFactoryDefault = new mboxFactory('generalmotorscorpora.tt.omtrdc.net', 'generalmotorscorpora', 'default'); }; if (mboxGetPageParameter("mboxDebug") != null || mboxFactoryDefault.getCookieManager().getCookie("debug") != null) { setTimeout(function () { if (typeof mboxDebugLoaded == 'undefined') { alert('Could not load the remote debug.\nPlease check your connection' + ' to Test&amp;Target servers'); } }, 60 * 60); document.write('<' + 'scr' + 'ipt language="Javascript1.2" src=' + '"//web.archive.org/web/20150415193503/http://admin6.testandtarget.omniture.com/admin/mbox/mbox_debug.jsp?mboxServerHost=generalmotorscorpora.tt.omtrdc.net' + '&clientCode=generalmotorscorpora"><' + '\/scr' + 'ipt>'); }; mboxScPluginFetcher = function (r, Tc) { this.r = r; this.Tc = Tc; }; mboxScPluginFetcher.prototype.Uc = function (L) { L.setBasePath('/m2/' + this.r + '/sc/standard'); this.Vc(L); var u = L.buildUrl(); u += '&scPluginVersion=1'; return u; }; mboxScPluginFetcher.prototype.Vc = function (L) { var Wc = ["dynamicVariablePrefix", "visitorID", "vmk", "ppu", "charSet", "visitorNamespace", "cookieDomainPeriods", "cookieLifetime", "pageName", "currencyCode", "variableProvider", "channel", "server", "pageType", "transactionID", "purchaseID", "campaign", "state", "zip", "events", "products", "linkName", "linkType", "resolution", "colorDepth", "javascriptVersion", "javaEnabled", "cookiesEnabled", "browserWidth", "browserHeight", "connectionType", "homepage", "pe", "pev1", "pev2", "pev3", "visitorSampling", "visitorSamplingGroup", "dynamicAccountSelection", "dynamicAccountList", "dynamicAccountMatch", "trackDownloadLinks", "trackExternalLinks", "trackInlineStats", "linkLeaveQueryString", "linkDownloadFileTypes", "linkExternalFilters", "linkInternalFilters", "linkTrackVars", "linkTrackEvents", "linkNames", "lnk", "eo"]; for (var y = 0; y < Wc.length; y++) { this.Xc(Wc[y], L); } for (var y = 1; y <= 75; y++) { this.Xc('prop' + y, L); this.Xc('eVar' + y, L); this.Xc('hier' + y, L); } }; mboxScPluginFetcher.prototype.Xc = function (w, L) { var x = this.Tc[w]; if (typeof x === 'undefined' || x === null || x === '' || typeof x === 'object') { return; } L.addParameter(w, x); }; mboxScPluginFetcher.prototype.cancel = function () { }; mboxScPluginFetcher.prototype.fetch = function (L) { L.setServerType(this.getType()); var u = this.Uc(L); this.M = document.createElement('script'); this.M.src = u; document.body.appendChild(this.M); }; mboxScPluginFetcher.prototype.getType = function () { return 'ajax'; }; function mboxLoadSCPlugin(Tc) { if (!Tc) { return null; } Tc.m_tt = function (Tc) { var Yc = Tc.m_i('tt'); Yc.W = true; Yc.r = 'generalmotorscorpora'; Yc['_t'] = function () { if (!this.isEnabled()) { return; } var mb = this._c(); if (mb) { var kc = new mboxScPluginFetcher(this.r, this.s); mb.setFetcher(kc); mb.load(); } }; Yc.isEnabled = function () { return this.W && mboxFactoryDefault.isEnabled(); }; Yc._c = function () { var qb = this.ad(); var Ub = document.createElement('DIV'); return mboxFactoryDefault.create(qb, new Array(), Ub); }; Yc.ad = function () { var bd = this.s.events && this.s.events.indexOf('purchase') != -1; return 'SiteCatalyst: ' + (bd ? 'purchase' : 'event'); }; }; return Tc.loadModule('tt'); }; mboxVizTargetUrl = function (qb) { if (!mboxFactoryDefault.isEnabled()) { return; } var L = mboxFactoryDefault.getUrlBuilder().clone(); L.setBasePath('/m2/' + 'generalmotorscorpora' + '/viztarget'); L.addParameter('mbox', qb); L.addParameter('mboxId', 0); L.addParameter('mboxCount', mboxFactoryDefault.getMboxes().length() + 1); var Gb = new Date(); L.addParameter('mboxTime', Gb.getTime() - (Gb.getTimezoneOffset() * 60000)); L.addParameter('mboxPage', mboxGenerateId()); var s = mboxShiftArray(arguments); if (s && s.length > 0) { L.addParameters(s); } L.addParameter('mboxDOMLoaded', mboxFactoryDefault.isDomLoaded()); mboxFactoryDefault.setVisitorIdParameters(L, qb); return L.buildUrl(); }; TNT.createGlobalMbox = function () { var cd = "GM_Global_Standard"; var dd = ("".length === 0); var ed = ""; var fd; if (dd) { ed = "mbox-" + cd + "-" + mboxGenerateId(); fd = document.createElement("div"); fd.className = "mboxDefault"; fd.id = ed; fd.style.visibility = "hidden"; fd.style.display = "none"; mboxFactoryDefault.addOnLoad(function () { document.body.insertBefore(fd, document.body.firstChild); }); } var gd = mboxFactoryDefault.create(cd, TNT.a.b(), ed); if (gd != null) { gd.load(); } }; document.write('<script src="' + document.location.protocol + '//web.archive.org/web/20150415193503/http://cdn.tt.omtrdc.net/cdn/target.js"></script>'); var mboxTrack = function (mbox, params) { var m, u, i, f = mboxFactoryDefault; if (f.isEnabled()) { if (f.getMboxes().length() > 0) { m = f.getMboxes().getById(0); u = m.getURL().replace("mbox=" + escape(m.getName()), "mbox=" + mbox).replace("/undefined", "/ajax").replace("mboxPage=" + f.getPageId(), "mboxPage=" + mboxGenerateId()) + '&' + params, i = new Image(); i.style.display = 'none'; i.src = u; document.body.appendChild(i) } else { mboxTrackDefer(mbox, params) } } }, mboxTrackDefer = function (mbox, params) { var f = mboxFactoryDefault; if (f.isEnabled()) { mboxFactoryDefault.getSignaler().signal(mbox, mbox + '&' + params) } }, mboxTrackLink = function (mbox, params, url) { mboxTrack(mbox, params); setTimeout("location='" + url + "'", 500) };

function aam_tnt_cb() {
    if (typeof (arguments[0].stuff) != "undefined" && arguments[0].stuff != "") {
        for (var i = 0; i < arguments[0].stuff.length; i++) {
            if (arguments[0].stuff[i].cn == "aam_tnt") {
                if (arguments[0].stuff[0].cv.split(",")) {
                    var demdex_raw = arguments[0].stuff[i].cv.split(",");
                    var tapMboxBuilder = mboxFactoryDefault.getUrlBuilder();
                    tapMboxBuilder.addParameters(demdex_raw);
                }
            }
        }
    }
}

mboxScPluginFetcher.prototype.Xc = function (w, L) {
    var x = this.Tc[w];
    if (typeof (x) === 'undefined' || x === null || x === '') {
        return;
    }
    if (!w.match("^(linkInternalFilters|lnk)$"))
        L.addParameter(w, x);
};

(function () { function p(e) { var t = "", n; for (var r = 0; e[r]; r++) { n = e[r]; if (n.nodeType === 3 || n.nodeType === 4) { t += n.nodeValue } else if (n.nodeType !== 8) { t += p(n.childNodes) } } return t } function d(e, t, n, r, i, s) { for (var o = 0, u = r.length; o < u; o++) { var a = r[o]; if (a) { a = a[e]; var f = false; while (a) { if (a.sizcache === n) { f = r[a.sizset]; break } if (a.nodeType === 1 && !s) { a.sizcache = n; a.sizset = o } if (a.nodeName.toLowerCase() === t) { f = a; break } a = a[e] } r[o] = f } } } function v(e, t, n, r, i, s) { for (var u = 0, a = r.length; u < a; u++) { var f = r[u]; if (f) { f = f[e]; var l = false; while (f) { if (f.sizcache === n) { l = r[f.sizset]; break } if (f.nodeType === 1) { if (!s) { f.sizcache = n; f.sizset = u } if (typeof t !== "string") { if (f === t) { l = true; break } } else if (o.filter(t, [f]).length > 0) { l = f; break } } f = f[e] } r[u] = l } } } var e = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g, n = 0, r = Object.prototype.toString, i = false, s = true;[0, 0].sort(function () { s = false; return 0 }); var o = function (t, n, i, s) { i = i || []; var f = n = n || document; if (n.nodeType !== 1 && n.nodeType !== 9) { return [] } if (!t || typeof t !== "string") { return i } var c = [], h, p, d, v, b = true, w = g(n), E = t; while ((e.exec(""), h = e.exec(E)) !== null) { E = h[3]; c.push(h[1]); if (h[2]) { v = h[3]; break } } if (c.length > 1 && a.exec(t)) { if (c.length === 2 && u.relative[c[0]]) { p = y(c[0] + c[1], n) } else { p = u.relative[c[0]] ? [n] : o(c.shift(), n); while (c.length) { t = c.shift(); if (u.relative[t]) { t += c.shift() } p = y(t, p) } } } else { if (!s && c.length > 1 && n.nodeType === 9 && !w && u.match.ID.test(c[0]) && !u.match.ID.test(c[c.length - 1])) { var S = o.find(c.shift(), n, w); n = S.expr ? o.filter(S.expr, S.set)[0] : S.set[0] } if (n) { var S = s ? { expr: c.pop(), set: l(s) } : o.find(c.pop(), c.length === 1 && (c[0] === "~" || c[0] === "+") && n.parentNode ? n.parentNode : n, w); p = S.expr ? o.filter(S.expr, S.set) : S.set; if (c.length > 0) { d = l(p) } else { b = false } while (c.length) { var x = c.pop(), T = x; if (!u.relative[x]) { x = "" } else { T = c.pop() } if (T == null) { T = n } u.relative[x](d, T, w) } } else { d = c = [] } } if (!d) { d = p } if (!d) { o.error(x || t) } if (r.call(d) === "[object Array]") { if (!b) { i.push.apply(i, d) } else if (n && n.nodeType === 1) { for (var N = 0; d[N] != null; N++) { if (d[N] && (d[N] === true || d[N].nodeType === 1 && m(n, d[N]))) { i.push(p[N]) } } } else { for (var N = 0; d[N] != null; N++) { if (d[N] && d[N].nodeType === 1) { i.push(p[N]) } } } } else { l(d, i) } if (v) { o(v, f, i, s); o.uniqueSort(i) } return i }; o.uniqueSort = function (e) { if (h) { i = s; e.sort(h); if (i) { for (var t = 1; t < e.length; t++) { if (e[t] === e[t - 1]) { e.splice(t--, 1) } } } } return e }; o.matches = function (e, t) { return o(e, null, null, t) }; o.find = function (e, t, n) { var r, i; if (!e) { return [] } for (var s = 0, o = u.order.length; s < o; s++) { var a = u.order[s], i; if (i = u.leftMatch[a].exec(e)) { var f = i[1]; i.splice(1, 1); if (f.substr(f.length - 1) !== "\\") { i[1] = (i[1] || "").replace(/\\/g, ""); r = u.find[a](i, t, n); if (r != null) { e = e.replace(u.match[a], ""); break } } } } if (!r) { r = t.getElementsByTagName("*") } return { set: r, expr: e } }; o.filter = function (e, t, n, r) { var i = e, s = [], a = t, f, l, c = t && t[0] && g(t[0]); while (e && t.length) { for (var h in u.filter) { if ((f = u.leftMatch[h].exec(e)) != null && f[2]) { var p = u.filter[h], d, v, m = f[1]; l = false; f.splice(1, 1); if (m.substr(m.length - 1) === "\\") { continue } if (a === s) { s = [] } if (u.preFilter[h]) { f = u.preFilter[h](f, a, n, s, r, c); if (!f) { l = d = true } else if (f === true) { continue } } if (f) { for (var y = 0; (v = a[y]) != null; y++) { if (v) { d = p(v, f, y, a); var b = r ^ !!d; if (n && d != null) { if (b) { l = true } else { a[y] = false } } else if (b) { s.push(v); l = true } } } } if (d !== undefined) { if (!n) { a = s } e = e.replace(u.match[h], ""); if (!l) { return [] } break } } } if (e === i) { if (l == null) { o.error(e) } else { break } } i = e } return a }; o.error = function (e) { throw "Syntax error, unrecognized expression: " + e }; var u = o.selectors = { order: ["ID", "NAME", "TAG"], match: { ID: /#((?:[\w\u00c0-\uFFFF-]|\\.)+)/, CLASS: /\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/, NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF-]|\\.)+)['"]*\]/, ATTR: /\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/, TAG: /^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/, CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/, POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/, PSEUDO: /:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/ }, leftMatch: {}, attrMap: { "class": "className", "for": "htmlFor" }, attrHandle: { href: function (e) { return e.getAttribute("href") } }, relative: { "+": function (e, t) { var n = typeof t === "string", r = n && !/\W/.test(t), i = n && !r; if (r) { t = t.toLowerCase() } for (var s = 0, u = e.length, a; s < u; s++) { if (a = e[s]) { while ((a = a.previousSibling) && a.nodeType !== 1) { } e[s] = i || a && a.nodeName.toLowerCase() === t ? a || false : a === t } } if (i) { o.filter(t, e, true) } }, ">": function (e, t) { var n = typeof t === "string"; if (n && !/\W/.test(t)) { t = t.toLowerCase(); for (var r = 0, i = e.length; r < i; r++) { var s = e[r]; if (s) { var u = s.parentNode; e[r] = u.nodeName.toLowerCase() === t ? u : false } } } else { for (var r = 0, i = e.length; r < i; r++) { var s = e[r]; if (s) { e[r] = n ? s.parentNode : s.parentNode === t } } if (n) { o.filter(t, e, true) } } }, "": function (e, t, r) { var i = n++, s = v; if (typeof t === "string" && !/\W/.test(t)) { var o = t = t.toLowerCase(); s = d } s("parentNode", t, i, e, o, r) }, "~": function (e, t, r) { var i = n++, s = v; if (typeof t === "string" && !/\W/.test(t)) { var o = t = t.toLowerCase(); s = d } s("previousSibling", t, i, e, o, r) } }, find: { ID: function (e, t, n) { if (typeof t.getElementById !== "undefined" && !n) { var r = t.getElementById(e[1]); return r ? [r] : [] } }, NAME: function (e, t) { if (typeof t.getElementsByName !== "undefined") { var n = [], r = t.getElementsByName(e[1]); for (var i = 0, s = r.length; i < s; i++) { if (r[i].getAttribute("name") === e[1]) { n.push(r[i]) } } return n.length === 0 ? null : n } }, TAG: function (e, t) { return t.getElementsByTagName(e[1]) } }, preFilter: { CLASS: function (e, t, n, r, i, s) { e = " " + e[1].replace(/\\/g, "") + " "; if (s) { return e } for (var o = 0, u; (u = t[o]) != null; o++) { if (u) { if (i ^ (u.className && (" " + u.className + " ").replace(/[\t\n]/g, " ").indexOf(e) >= 0)) { if (!n) { r.push(u) } } else if (n) { t[o] = false } } } return false }, ID: function (e) { return e[1].replace(/\\/g, "") }, TAG: function (e, t) { return e[1].toLowerCase() }, CHILD: function (e) { if (e[1] === "nth") { var t = /(-?)(\d*)n((?:\+|-)?\d*)/.exec(e[2] === "even" && "2n" || e[2] === "odd" && "2n+1" || !/\D/.test(e[2]) && "0n+" + e[2] || e[2]); e[2] = t[1] + (t[2] || 1) - 0; e[3] = t[3] - 0 } e[0] = n++; return e }, ATTR: function (e, t, n, r, i, s) { var o = e[1].replace(/\\/g, ""); if (!s && u.attrMap[o]) { e[1] = u.attrMap[o] } if (e[2] === "~=") { e[4] = " " + e[4] + " " } return e }, PSEUDO: function (t, n, r, i, s) { if (t[1] === "not") { if ((e.exec(t[3]) || "").length > 1 || /^\w/.test(t[3])) { t[3] = o(t[3], null, null, n) } else { var a = o.filter(t[3], n, r, true ^ s); if (!r) { i.push.apply(i, a) } return false } } else if (u.match.POS.test(t[0]) || u.match.CHILD.test(t[0])) { return true } return t }, POS: function (e) { e.unshift(true); return e } }, filters: { enabled: function (e) { return e.disabled === false && e.type !== "hidden" }, disabled: function (e) { return e.disabled === true }, checked: function (e) { return e.checked === true }, selected: function (e) { e.parentNode.selectedIndex; return e.selected === true }, parent: function (e) { return !!e.firstChild }, empty: function (e) { return !e.firstChild }, has: function (e, t, n) { return !!o(n[3], e).length }, header: function (e) { return /h\d/i.test(e.nodeName) }, text: function (e) { return "text" === e.type }, radio: function (e) { return "radio" === e.type }, checkbox: function (e) { return "checkbox" === e.type; if (c()) { t() } }, file: function (e) { return "file" === e.type }, password: function (e) { return "password" === e.type }, submit: function (e) { return "submit" === e.type }, image: function (e) { return "image" === e.type }, reset: function (e) { return "reset" === e.type }, button: function (e) { return "button" === e.type || e.nodeName.toLowerCase() === "button" }, input: function (e) { return /input|select|textarea|button/i.test(e.nodeName) } }, setFilters: { first: function (e, t) { return t === 0 }, last: function (e, t, n, r) { return t === r.length - 1 }, even: function (e, t) { return t % 2 === 0 }, odd: function (e, t) { return t % 2 === 1 }, lt: function (e, t, n) { return t < n[3] - 0 }, gt: function (e, t, n) { return t > n[3] - 0 }, nth: function (e, t, n) { return n[3] - 0 === t }, eq: function (e, t, n) { return n[3] - 0 === t } }, filter: { PSEUDO: function (e, t, n, r) { var i = t[1], s = u.filters[i]; if (s) { return s(e, n, t, r) } else if (i === "contains") { return (e.textContent || e.innerText || p([e]) || "").indexOf(t[3]) >= 0 } else if (i === "not") { var a = t[3]; for (var n = 0, f = a.length; n < f; n++) { if (a[n] === e) { return false } } return true } else { o.error("Syntax error, unrecognized expression: " + i) } }, CHILD: function (e, t) { var n = t[1], r = e; switch (n) { case "only": case "first": while (r = r.previousSibling) { if (r.nodeType === 1) { return false } } if (n === "first") { return true } r = e; case "last": while (r = r.nextSibling) { if (r.nodeType === 1) { return false } } return true; case "nth": var i = t[2], s = t[3]; if (i === 1 && s === 0) { return true } var o = t[0], u = e.parentNode; if (u && (u.sizcache !== o || !e.nodeIndex)) { var a = 0; for (r = u.firstChild; r; r = r.nextSibling) { if (r.nodeType === 1) { r.nodeIndex = ++a } } u.sizcache = o } var f = e.nodeIndex - s; if (i === 0) { return f === 0 } else { return f % i === 0 && f / i >= 0 } } }, ID: function (e, t) { return e.nodeType === 1 && e.getAttribute("id") === t }, TAG: function (e, t) { return t === "*" && e.nodeType === 1 || e.nodeName.toLowerCase() === t }, CLASS: function (e, t) { return (" " + (e.className || e.getAttribute("class")) + " ").indexOf(t) > -1 }, ATTR: function (e, t) { var n = t[1], r = u.attrHandle[n] ? u.attrHandle[n](e) : e[n] != null ? e[n] : e.getAttribute(n), i = r + "", s = t[2], o = t[4]; return r == null ? s === "!=" : s === "=" ? i === o : s === "*=" ? i.indexOf(o) >= 0 : s === "~=" ? (" " + i + " ").indexOf(o) >= 0 : !o ? i && r !== false : s === "!=" ? i !== o : s === "^=" ? i.indexOf(o) === 0 : s === "$=" ? i.substr(i.length - o.length) === o : s === "|=" ? i === o || i.substr(0, o.length + 1) === o + "-" : false }, POS: function (e, t, n, r) { var i = t[2], s = u.setFilters[i]; if (s) { return s(e, n, t, r) } } } }; var a = u.match.POS; for (var f in u.match) { u.match[f] = new RegExp(u.match[f].source + /(?![^\[]*\])(?![^\(]*\))/.source); u.leftMatch[f] = new RegExp(/(^(?:.|\r|\n)*?)/.source + u.match[f].source.replace(/\\(\d+)/g, function (e, t) { return "\\" + (t - 0 + 1) })) } var l = function (e, t) { e = Array.prototype.slice.call(e, 0); if (t) { t.push.apply(t, e); return t } return e }; try { Array.prototype.slice.call(document.documentElement.childNodes, 0) } catch (c) { l = function (e, t) { var n = t || []; if (r.call(e) === "[object Array]") { Array.prototype.push.apply(n, e) } else { if (typeof e.length === "number") { for (var i = 0, s = e.length; i < s; i++) { n.push(e[i]) } } else { for (var i = 0; e[i]; i++) { n.push(e[i]) } } } return n } } var h; if (document.documentElement.compareDocumentPosition) { h = function (e, t) { if (!e.compareDocumentPosition || !t.compareDocumentPosition) { if (e == t) { i = true } return e.compareDocumentPosition ? -1 : 1 } var n = e.compareDocumentPosition(t) & 4 ? -1 : e === t ? 0 : 1; if (n === 0) { i = true } return n } } else if ("sourceIndex" in document.documentElement) { h = function (e, t) { if (!e.sourceIndex || !t.sourceIndex) { if (e == t) { i = true } return e.sourceIndex ? -1 : 1 } var n = e.sourceIndex - t.sourceIndex; if (n === 0) { i = true } return n } } else if (document.createRange) { h = function (e, t) { if (!e.ownerDocument || !t.ownerDocument) { if (e == t) { i = true } return e.ownerDocument ? -1 : 1 } var n = e.ownerDocument.createRange(), r = t.ownerDocument.createRange(); n.setStart(e, 0); n.setEnd(e, 0); r.setStart(t, 0); r.setEnd(t, 0); var s = n.compareBoundaryPoints(Range.START_TO_END, r); if (s === 0) { i = true } return s } } (function () { var e = document.createElement("div"), t = "script" + (new Date).getTime(); e.innerHTML = "<a name='" + t + "'/>"; var n = document.documentElement; n.insertBefore(e, n.firstChild); if (document.getElementById(t)) { u.find.ID = function (e, t, n) { if (typeof t.getElementById !== "undefined" && !n) { var r = t.getElementById(e[1]); return r ? r.id === e[1] || typeof r.getAttributeNode !== "undefined" && r.getAttributeNode("id").nodeValue === e[1] ? [r] : undefined : [] } }; u.filter.ID = function (e, t) { var n = typeof e.getAttributeNode !== "undefined" && e.getAttributeNode("id"); return e.nodeType === 1 && n && n.nodeValue === t } } n.removeChild(e); n = e = null })(); (function () { var e = document.createElement("div"); e.appendChild(document.createComment("")); if (e.getElementsByTagName("*").length > 0) { u.find.TAG = function (e, t) { var n = t.getElementsByTagName(e[1]); if (e[1] === "*") { var r = []; for (var i = 0; n[i]; i++) { if (n[i].nodeType === 1) { r.push(n[i]) } } n = r } return n } } e.innerHTML = "<a href='#'></a>"; if (e.firstChild && typeof e.firstChild.getAttribute !== "undefined" && e.firstChild.getAttribute("href") !== "#") { u.attrHandle.href = function (e) { return e.getAttribute("href", 2) } } e = null })(); if (document.querySelectorAll) { (function () { var e = o, t = document.createElement("div"); t.innerHTML = "<p class='TEST'></p>"; if (t.querySelectorAll && t.querySelectorAll(".TEST").length === 0) { return } o = function (t, n, r, i) { n = n || document; if (!i && n.nodeType === 9 && !g(n)) { try { return l(n.querySelectorAll(t), r) } catch (s) { } } return e(t, n, r, i) }; for (var n in e) { o[n] = e[n] } t = null })() } (function () { var e = document.createElement("div"); e.innerHTML = "<div class='test e'></div><div class='test'></div>"; if (!e.getElementsByClassName || e.getElementsByClassName("e").length === 0) { return } e.lastChild.className = "e"; if (e.getElementsByClassName("e").length === 1) { return } u.order.splice(1, 0, "CLASS"); u.find.CLASS = function (e, t, n) { if (typeof t.getElementsByClassName !== "undefined" && !n) { return t.getElementsByClassName(e[1]) } }; e = null })(); var m = document.compareDocumentPosition ? function (e, t) { return e.compareDocumentPosition(t) & 16 } : function (e, t) { return e !== t && (e.contains ? e.contains(t) : true) }; var g = function (e) { var t = (e ? e.ownerDocument || e : 0).documentElement; return t ? t.nodeName !== "HTML" : false }; var y = function (e, t) { var n = [], r = "", i, s = t.nodeType ? [t] : t; while (i = u.match.PSEUDO.exec(e)) { r += i[0]; e = e.replace(u.match.PSEUDO, "") } e = u.relative[e] ? e + "*" : e; for (var a = 0, f = s.length; a < f; a++) { o(e, s[a], n) } return o.filter(r, n) }; if (!window.Sizzle) window.Sizzle = o })(); window.od = {}; (function () { od.fetcher = new mboxAjaxFetcher; arrayIt = function (e, t) { t = t || 0; var n = []; for (var r = t; r < e.length; r++) n.push(e[r]); return n }; ArrayExtended = function () { var e = new Array; e.find = function (e) { for (var t = 0, n; n = this[t], t < this.length; t++) { if (n == e) return n } return null }; return e }; var e = { mboxContainerId: "od-unique-mbox-container-" + Math.ceil(Math.random() * 1e5), mboxDivMappings: new ArrayExtended, addMboxDefine: function (e) { if (!this.mboxDivMappings.find(e)) { this.mboxDivMappings.push(e); var t = document.createElement("div"); if (!this.mboxContainer) { var n = document.createElement("div"); n.id = this.mboxContainerId; document.body.insertBefore(n, document.body.childNodes[0]); this.mboxContainer = n } t.id = this.mboxContainer.id + "-" + this.mboxDivMappings.length; this.mboxContainer.appendChild(t); mboxDefine(t.id, e).setFetcher(od.fetcher) } }, addEvent: function (e, t, n) { if (e) { if (e.addEventListener) e.addEventListener(t, n, true); else if (e.attachEvent) e.attachEvent("on" + t, n); else e["on" + t] = n } else { OmniDig.Debug.alert("elem passed to addEvent does not exist\neventName: " + t + "\n" + n) } }, arrayToUrlParamStr: function (e) { if (e && e.join && e.length > 0) return "&" + e.join("&"); else return "" }, buildTrackingImageUrl: function (t, n) { if (e.clientInfo.initialized) { var r = "http://" + e.clientInfo.host + "/m2/" + e.clientInfo.code + "/ubox/image" + "?mbox=" + t + "&mboxPC=" + mboxFactoryDefault.getPCId().getId() + "&mboxSession=" + mboxFactoryDefault.getSessionId().getId() + "&mboxXDomain=disabled" + this.arrayToUrlParamStr(n) } else { var r = oldUrl } return r }, buildRedirectorStr: function (t, n, r) { if (e.clientInfo.initialized) { var i = "http://" + e.clientInfo.host + "/m2/" + e.clientInfo.code + "/ubox/page" + "?mbox=" + t + "&mboxPC=" + mboxFactoryDefault.getPCId().getId() + "&mboxSession=" + mboxFactoryDefault.getSessionId().getId() + "&mboxXDomain=disabled" + "&mboxDefault=" + encodeURIComponent(n) + this.arrayToUrlParamStr(r) } else { var i = n } return i } }; var t = function () { var e = { host: "", code: "", initialized: false }; if (mboxFactoryDefault && mboxFactoryDefault.getUrlBuilder) { var t = mboxFactoryDefault.getUrlBuilder(); for (var n in t) { if (t[n]) { var r = t[n]; if (typeof t[n] == "string") { if (t[n].indexOf(".tt.omtrdc.net") > -1) e.host = t[n]; else if (r.indexOf("mbox") > -1 && r.indexOf(".offermatica.com") > -1) e.host = t[n]; else e.code = t[n] } } } } if (e.host != "" && e.code != "") e.initialized = true; return e }; e.clientInfo = t(); od.mboxUpdate = function () { if (arguments.length > 0) { e.addMboxDefine(arguments[0]); mboxUpdate.apply(mboxUpdate, arrayIt(arguments)) } }; var n = function (t, n, r, i) { if (i.appendToEvent || i.prependToEvent) { if (!t["on" + n]) { i.overwriteEvent = true; i.appendToEvent = false; i.prependToEvent = false } } i.delayStart = i.delayStart || 0; if (i.overwriteEvent) { t["on" + n] = r } else if (i.appendToEvent) { t["on" + n] = function (e, t, n) { return function () { t(); setTimeout(e, n.delayStart) } }(r, t["on" + n], i) } else if (i.prependToEvent) { t["on" + n] = function (e, t, n) { return function () { e(); setTimeout(t, n.delayStart) } }(r, t["on" + n], i) } else { e.addEvent(t, n, r) } }; var r = function (t, r, i) { this.setAttribute("omnidig", "handled"); if (typeof i == "object") { var s = i; i = arguments[3]; var o = arrayIt(arguments, 4) } else { var s = {}; var o = arrayIt(arguments, 3) } if (this) { r = r || ""; switch (r.toLowerCase()) { case "image": var u = e.buildTrackingImageUrl("image", i, this.href, o); if (s.redirect) { var a = function (e, t, n) { return function () { var r = e.href; e.href = "javascript:void(0)"; var i = document.createElement("img"); i.style.display = "none"; i.src = n; setTimeout("window.location.href='" + r + "'", t.timeout ? t.timeout : 700); return false } }(this, s, u) } else { var a = function (e) { return function () { var t = document.createElement("img"); t.style.display = "none"; t.src = e } }(u) } n(this, t, a, s); break; case "redirector": if (this.nodeName && this.nodeName.toLowerCase() == "a" && this.href) { var f = e.buildRedirectorStr(i, this.href, o); if (s.stealthy) { var a = function (e, t) { return function () { e.href = t } }(this, f); n(this, t, a, s) } else this.href = f } break; case "mboxupdate": e.addMboxDefine(i); o.splice(0, 0, i); if (s.redirect) { var a = function (e, t, n) { return function () { var r = t.href ? t.href : e.href; e.href = "javascript:void(0)"; mboxUpdate.apply(mboxUpdate, n); if (r) setTimeout("window.location.href='" + r + "'", t.timeout ? t.timeout : 700); return false } }(this, s, o) } else { var a = function (e) { return function () { mboxUpdate.apply(mboxUpdate, e) } }(o) } n(this, t, a, s); break; case "cookie": o.splice(0, 0, "special", i); var a = function (e, t) { return function () { mboxFactoryDefault.getSignaler().signal.apply(mboxFactoryDefault.getSignaler(), t) } }(this, o); n(this, t, a, s); break } } }; var i = function (e) { switch (typeof e) { case "undefined": return od.NOT_FOUND_DIV; case "string": if (e.indexOf("#") == 0) e = e.slice(1); var t = document.getElementById(e); return t ? s(t) : od.NOT_FOUND_DIV; default: return s(e) } }; var s = function (t, n) { if (t && !t.HANDLED) { if (n) { t.parentNode = t.parentNode ? s(t.parentNode, true) : od.NOT_FOUND_DIV } t.HANDLED = true; t.query = function (e) { return u(Sizzle(e, this)) }; t.$$ = t.query; t.item = function (e) { if (e > -1 && e < this.childNodes.length) { s(this.childNodes[e], n); return this.childNodes[e] } else return od.NOT_FOUND_DIV }; t.track = function (e, t, n) { if (!this.NOT_FOUND) { if (!this.getAttribute("omnidig")) { r.apply(this, arrayIt(arguments)) } } return this }; t.addEvent = function (t, n, r) { if (!this.NOT_FOUND) { if (r || !this.getAttribute("omnidig")) { e.addEvent(this, t, n) } } return this } } return t }; var o = function () { var e = document.createElement("div"); e.id = "notFoundDiv"; s(e); e.item = function () { return e }; e.query = function () { return u([e]) }; e.NOT_FOUND = true; e.innerHTML = "DOES NOT EXIST"; return e }; od.NOT_FOUND_DIV = new o; var u = function (e, t) { for (var n = 0; n < e.length; n++) { s(e[n], t) } e.item = function (e) { if (e > -1 && e < this.length) { return s(this[e], t) } else return od.NOT_FOUND_DIV }; e.first = e.item(0); e.last = e.item(e.length - 1); e.callMultiple = function (e, t) { for (var n = 0, r; r = this[n], n < this.length; n++) { r[e].apply(r, t) } }; var r = ["track", "addEvent"]; for (var n = 0, i; i = r[n], n < r.length; n++) e[i] = function (e) { return function () { this.callMultiple(e, arrayIt(arguments)) } }(i); return e }; od.query = function () { return u(Sizzle.apply(Sizzle, arrayIt(arguments))) }; od.$$ = od.query; od.$ = i; od.repeatIt = function (e, t, n, r) { var i = { current: 0, delayStart: 0 }; if (r) { i.current = r.current || i.current; i.delayStart = r.delayStart || i.delayStart } if (i.current == 0 && i.delayStart > 0) { var s = i.delayStart; i.delayStart = 0; setTimeout(function (e, t, n, r) { return od.repeatIt(e, t, n, r) }, s, e, t, n, i) } else { e(); i.current += t; if (i.current < n) { setTimeout(function (e, t, n, r) { return od.repeatIt(e, t, n, r) }, t, e, t, n, i) } } }; od.execWhenTrue = function (e, t, n) { var r = { current: 0, interval: 500, timeout: 1e4, delayStart: 0 }; if (n) { r.current = n.current || r.current; r.interval = n.interval || r.interval; r.timeout = n.timeout || r.timeout; r.delayStart = n.delayStart || r.delayStart } if (typeof e()) { t() } else if (r.current < r.timeout) { r.current += r.interval; setTimeout(function (e, t, n) { return od.execWhenTrue(e, t, n) }, r.interval, e, t, r) } }; od.execWhenTrue(function () { return typeof window.odStartUpdates != "undefined" }, function () { }, { interval: 1e3, timeout: 2e4 }) })()

}
/*
     FILE ARCHIVED ON 19:35:03 Apr 15, 2015 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 05:10:17 May 01, 2023.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  captures_list: 143.751
  exclusion.robots: 0.081
  exclusion.robots.policy: 0.072
  cdx.remote: 0.051
  esindex: 0.007
  LoadShardBlock: 95.841 (3)
  PetaboxLoader3.datanode: 89.292 (4)
  load_resource: 55.334
  PetaboxLoader3.resolve: 38.893
*/