/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"main": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./wp-content/themes/shiner/assets/js/main.js","vendors~main"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./wp-content/themes/shiner/assets/js/main.js":
/*!****************************************************!*\
  !*** ./wp-content/themes/shiner/assets/js/main.js ***!
  \****************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scss/main.scss */ "./wp-content/themes/shiner/assets/scss/main.scss");
/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_scss_main_scss__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _scss_editor_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scss/editor.scss */ "./wp-content/themes/shiner/assets/scss/editor.scss");
/* harmony import */ var _scss_editor_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_scss_editor_scss__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ "jquery");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var bootstrap_dist_js_bootstrap_bundle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bootstrap/dist/js/bootstrap.bundle.js */ "./node_modules/bootstrap/dist/js/bootstrap.bundle.js");
/* harmony import */ var bootstrap_dist_js_bootstrap_bundle_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bootstrap_dist_js_bootstrap_bundle_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap */ "./node_modules/gsap/index.js");
/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utilities */ "./wp-content/themes/shiner/assets/js/utilities.js");






jquery__WEBPACK_IMPORTED_MODULE_2___default()(document).ready(function () {
  jquery__WEBPACK_IMPORTED_MODULE_2___default()('#mobile-nav-toggle, #mobile-nav li').click(function () {
    jquery__WEBPACK_IMPORTED_MODULE_2___default()('#mobile-nav').toggleClass('hidden');
  });
  Object(_utilities__WEBPACK_IMPORTED_MODULE_5__["intersectionObserver"])();
  function scrollTo(selector, offset, speed) {
    offset = typeof offset === 'undefined' ? 0 : offset;
    speed = typeof speed === 'undefined' ? 500 : speed;
    if (typeof selector === 'undefined') {
      return jquery__WEBPACK_IMPORTED_MODULE_2___default()('html, body').animate({
        scrollTop: 0
      }, speed).promise();
    } else {
      return jquery__WEBPACK_IMPORTED_MODULE_2___default()('html, body').animate({
        scrollTop: jquery__WEBPACK_IMPORTED_MODULE_2___default()(selector).offset().top - offset
      }, speed).promise();
    }
  }

  // Hero link scrollTo
  var heroLinkEl = document.querySelector('.js-hero-link');
  if (heroLinkEl) {
    heroLinkEl.addEventListener('click', function () {
      var scrollID = heroLinkEl.dataset.id;
      var scrollEl = document.querySelector('[data-scroll-id=' + scrollID + ']');
      scrollTo(scrollEl, 80);
    });
  }

  // Hero animation
  if (jquery__WEBPACK_IMPORTED_MODULE_2___default()('.hero__background').length > 1) {
    var startHero = function startHero() {
      gsap__WEBPACK_IMPORTED_MODULE_4__["default"].set(hero[curNum], {
        transform: 'scale(1)'
      });
      gsap__WEBPACK_IMPORTED_MODULE_4__["default"].to(hero[curNum], crossfade, {
        alpha: 1
      });
      gsap__WEBPACK_IMPORTED_MODULE_4__["default"].to(hero[curNum], duration, {
        transform: 'scale(1.25)',
        ease: "none",
        rotation: 0.01,
        autoRound: false
      });
      gsap__WEBPACK_IMPORTED_MODULE_4__["default"].delayedCall(duration - crossfade, nextHero);
    };
    var nextHero = function nextHero() {
      // gsap.to(hero[curNum], 2, {alpha: 0,'-webkit-filter':'blur(5px)', 'filter':'blur(5px)'});
      gsap__WEBPACK_IMPORTED_MODULE_4__["default"].to(hero[curNum], crossfade, {
        alpha: 0
      });
      curNum++;
      if (curNum >= numbs) {
        curNum = 0;
      }
      startHero();
    };
    var numbs = jquery__WEBPACK_IMPORTED_MODULE_2___default()('.hero__background').length;
    var hero = [];
    var curNum = 0;
    var duration = jquery__WEBPACK_IMPORTED_MODULE_2___default()('.hero__backgrounds').data("duration");
    var crossfade = jquery__WEBPACK_IMPORTED_MODULE_2___default()('.hero__backgrounds').data("crossfade");
    for (var i = 0; i < numbs; i++) {
      hero.push("#hero" + i);
      gsap__WEBPACK_IMPORTED_MODULE_4__["default"].set(hero[0], {
        alpha: 1
      });
      gsap__WEBPACK_IMPORTED_MODULE_4__["default"].set(hero[i], {
        transformOrigin: '50% 50%'
      });
    }
    startHero();
  } else if (jquery__WEBPACK_IMPORTED_MODULE_2___default()('.hero__background').length == 1) {
    gsap__WEBPACK_IMPORTED_MODULE_4__["default"].set('.hero__background', {
      alpha: 1
    });
  }
  jquery__WEBPACK_IMPORTED_MODULE_2___default()('.owl-carousel').owlCarousel({
    items: 1,
    nav: true,
    navText: ["<span></span>", "<span></span>"],
    loop: true,
    center: false,
    margin: 10,
    stagePadding: 250,
    URLhashListener: true,
    autoplayHoverPause: true,
    startPosition: 'URLHash',
    responsive: {
      0: {
        stagePadding: 50
      },
      767: {
        stagePadding: 100
      },
      991: {
        stagePadding: 150
      },
      1199: {
        stagePadding: 200
      }
    }
  });
  if (jquery__WEBPACK_IMPORTED_MODULE_2___default()('#splideMain').length) {
    var primaryMain = new Splide('#splideMain', {
      type: 'loop',
      perPage: 1,
      perMove: 1,
      pagination: false,
      padding: '10%',
      easing: 'cubic-bezier(0.42, 0, 1, 1)',
      autoHeight: true,
      speed: 500
    });
    primaryMain.mount(window.splide.Extensions);
  }
  if (jquery__WEBPACK_IMPORTED_MODULE_2___default()('#splideVert').length) {
    jquery__WEBPACK_IMPORTED_MODULE_2___default()('.splideVert').each(function (key, item) {
      // console.log("slider sliders");
    });
  }
});
document.addEventListener('DOMContentLoaded', function () {
  if (jquery__WEBPACK_IMPORTED_MODULE_2___default()('.splideVert').length) {
    jquery__WEBPACK_IMPORTED_MODULE_2___default()('.splideVert').each(function (key, item) {
      // var primary = [];
      var dataLayer = jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).data('target');
      console.log(dataLayer);
      var primary = new Splide(dataLayer, {
        direction: 'ttb',
        gap: '1.5rem',
        pagination: false,
        height: 'calc((100vw/1.115)/(16/9))',
        easing: 'cubic-bezier(0.42, 0, 1, 1)',
        speed: 500
      });
      primary.mount();

      // var sliderIdName = 'slider' + key;
      // var sliderNavIdName = 'gallerijnav' + key;
      //
      // this.id = sliderIdName;
      // $('#splideVert')[key].id = sliderNavIdName;
      //
      // var sliderId = '#' + sliderIdName;
      // var sliderNavId = '#' + sliderNavIdName;
      //
      // console.log(sliderId);
      //
      // var primary = new Splide( '#splideVert', {
      //   direction: 'ttb',
      //   gap : '1.5rem',
      //   pagination: false,
      //   height: 'calc((100vw/1.09)/(16/9))',
      //   easing: 'cubic-bezier(0.42, 0, 1, 1)',
      //   speed: 500
      // } );
      // primary.mount();
    });
  }
});

/***/ }),

/***/ "./wp-content/themes/shiner/assets/js/utilities.js":
/*!*********************************************************!*\
  !*** ./wp-content/themes/shiner/assets/js/utilities.js ***!
  \*********************************************************/
/*! exports provided: intersectionObserver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersectionObserver", function() { return intersectionObserver; });
/* harmony import */ var core_js_modules_es6_array_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.array.map.js */ "./node_modules/core-js/modules/es6.array.map.js");
/* harmony import */ var core_js_modules_es6_array_map_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_map_js__WEBPACK_IMPORTED_MODULE_0__);

var intersectionObserver = function intersectionObserver() {
  // Check if IntersectionObserver is not supported
  if (!'IntersectionObserver' in window && !'IntersectionObserverEntry' in window && !'intersectionRatio' in window.IntersectionObserverEntry.prototype) {
    document.body.classList.add('no-observer-support');
  } else {
    // IntersectionObserver is supported
    var handleIntersection = function handleIntersection(entries) {
      entries.map(function (entry) {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
        }
      });
    };
    var observer = new IntersectionObserver(handleIntersection);
    var observerEls = document.querySelectorAll('.js-observe');
    setTimeout(function () {
      return observerEls.forEach(function (el) {
        return observer.observe(el);
      });
    });
  }
};

/***/ }),

/***/ "./wp-content/themes/shiner/assets/scss/editor.scss":
/*!**********************************************************!*\
  !*** ./wp-content/themes/shiner/assets/scss/editor.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./wp-content/themes/shiner/assets/scss/main.scss":
/*!********************************************************!*\
  !*** ./wp-content/themes/shiner/assets/scss/main.scss ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = jQuery;

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vd3AtY29udGVudC90aGVtZXMvc2hpbmVyL2Fzc2V0cy9qcy9tYWluLmpzIiwid2VicGFjazovLy8uL3dwLWNvbnRlbnQvdGhlbWVzL3NoaW5lci9hc3NldHMvanMvdXRpbGl0aWVzLmpzIiwid2VicGFjazovLy8uL3dwLWNvbnRlbnQvdGhlbWVzL3NoaW5lci9hc3NldHMvc2Nzcy9lZGl0b3Iuc2Nzcz9kMGJmIiwid2VicGFjazovLy8uL3dwLWNvbnRlbnQvdGhlbWVzL3NoaW5lci9hc3NldHMvc2Nzcy9tYWluLnNjc3M/NDA1MSIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJqUXVlcnlcIiJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsImNsaWNrIiwidG9nZ2xlQ2xhc3MiLCJpbnRlcnNlY3Rpb25PYnNlcnZlciIsInNjcm9sbFRvIiwic2VsZWN0b3IiLCJvZmZzZXQiLCJzcGVlZCIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJwcm9taXNlIiwidG9wIiwiaGVyb0xpbmtFbCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwic2Nyb2xsSUQiLCJkYXRhc2V0IiwiaWQiLCJzY3JvbGxFbCIsImxlbmd0aCIsInN0YXJ0SGVybyIsImdzYXAiLCJzZXQiLCJoZXJvIiwiY3VyTnVtIiwidHJhbnNmb3JtIiwidG8iLCJjcm9zc2ZhZGUiLCJhbHBoYSIsImR1cmF0aW9uIiwiZWFzZSIsInJvdGF0aW9uIiwiYXV0b1JvdW5kIiwiZGVsYXllZENhbGwiLCJuZXh0SGVybyIsIm51bWJzIiwiZGF0YSIsImkiLCJwdXNoIiwidHJhbnNmb3JtT3JpZ2luIiwib3dsQ2Fyb3VzZWwiLCJpdGVtcyIsIm5hdiIsIm5hdlRleHQiLCJsb29wIiwiY2VudGVyIiwibWFyZ2luIiwic3RhZ2VQYWRkaW5nIiwiVVJMaGFzaExpc3RlbmVyIiwiYXV0b3BsYXlIb3ZlclBhdXNlIiwic3RhcnRQb3NpdGlvbiIsInJlc3BvbnNpdmUiLCJwcmltYXJ5TWFpbiIsIlNwbGlkZSIsInR5cGUiLCJwZXJQYWdlIiwicGVyTW92ZSIsInBhZ2luYXRpb24iLCJwYWRkaW5nIiwiZWFzaW5nIiwiYXV0b0hlaWdodCIsIm1vdW50Iiwid2luZG93Iiwic3BsaWRlIiwiRXh0ZW5zaW9ucyIsImVhY2giLCJrZXkiLCJpdGVtIiwiZGF0YUxheWVyIiwiY29uc29sZSIsImxvZyIsInByaW1hcnkiLCJkaXJlY3Rpb24iLCJnYXAiLCJoZWlnaHQiLCJJbnRlcnNlY3Rpb25PYnNlcnZlckVudHJ5IiwicHJvdG90eXBlIiwiYm9keSIsImNsYXNzTGlzdCIsImFkZCIsImhhbmRsZUludGVyc2VjdGlvbiIsImVudHJpZXMiLCJtYXAiLCJlbnRyeSIsImlzSW50ZXJzZWN0aW5nIiwidGFyZ2V0Iiwib2JzZXJ2ZXIiLCJJbnRlcnNlY3Rpb25PYnNlcnZlciIsIm9ic2VydmVyRWxzIiwicXVlcnlTZWxlY3RvckFsbCIsInNldFRpbWVvdXQiLCJmb3JFYWNoIiwiZWwiLCJvYnNlcnZlIl0sIm1hcHBpbmdzIjoiO1FBQUE7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQSxRQUFRLG9CQUFvQjtRQUM1QjtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBLGlCQUFpQiw0QkFBNEI7UUFDN0M7UUFDQTtRQUNBLGtCQUFrQiwyQkFBMkI7UUFDN0M7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBOztRQUVBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7O1FBRUE7UUFDQTs7UUFF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QUNHLE9BQU8sQ0FBQyxVQUFDQyxFQUFFO1FBQUEsT0FBS04sUUFBUSxDQUFDTyxPQUFPLENBQUNELEVBQUUsQ0FBQztNQUFBLEVBQUM7SUFBQSxFQUFDO0VBQ3JFO0FBQ0YsQ0FBQyxDOzs7Ozs7Ozs7OztBQ3BCRCx5Qzs7Ozs7Ozs7Ozs7QUNBQSx5Qzs7Ozs7Ozs7Ozs7QUNBQSx3QiIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSnNvbnBDYWxsYmFjayhkYXRhKSB7XG4gXHRcdHZhciBjaHVua0lkcyA9IGRhdGFbMF07XG4gXHRcdHZhciBtb3JlTW9kdWxlcyA9IGRhdGFbMV07XG4gXHRcdHZhciBleGVjdXRlTW9kdWxlcyA9IGRhdGFbMl07XG5cbiBcdFx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG4gXHRcdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuIFx0XHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwLCByZXNvbHZlcyA9IFtdO1xuIFx0XHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJiBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdHJlc29sdmVzLnB1c2goaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKTtcbiBcdFx0XHR9XG4gXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcbiBcdFx0fVxuIFx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGlmKHBhcmVudEpzb25wRnVuY3Rpb24pIHBhcmVudEpzb25wRnVuY3Rpb24oZGF0YSk7XG5cbiBcdFx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG4gXHRcdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuIFx0XHR9XG5cbiBcdFx0Ly8gYWRkIGVudHJ5IG1vZHVsZXMgZnJvbSBsb2FkZWQgY2h1bmsgdG8gZGVmZXJyZWQgbGlzdFxuIFx0XHRkZWZlcnJlZE1vZHVsZXMucHVzaC5hcHBseShkZWZlcnJlZE1vZHVsZXMsIGV4ZWN1dGVNb2R1bGVzIHx8IFtdKTtcblxuIFx0XHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIGFsbCBjaHVua3MgcmVhZHlcbiBcdFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4gXHR9O1xuIFx0ZnVuY3Rpb24gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKSB7XG4gXHRcdHZhciByZXN1bHQ7XG4gXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZWZlcnJlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgZGVmZXJyZWRNb2R1bGUgPSBkZWZlcnJlZE1vZHVsZXNbaV07XG4gXHRcdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG4gXHRcdFx0Zm9yKHZhciBqID0gMTsgaiA8IGRlZmVycmVkTW9kdWxlLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHR2YXIgZGVwSWQgPSBkZWZlcnJlZE1vZHVsZVtqXTtcbiBcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tkZXBJZF0gIT09IDApIGZ1bGZpbGxlZCA9IGZhbHNlO1xuIFx0XHRcdH1cbiBcdFx0XHRpZihmdWxmaWxsZWQpIHtcbiBcdFx0XHRcdGRlZmVycmVkTW9kdWxlcy5zcGxpY2UoaS0tLCAxKTtcbiBcdFx0XHRcdHJlc3VsdCA9IF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gZGVmZXJyZWRNb2R1bGVbMF0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdHJldHVybiByZXN1bHQ7XG4gXHR9XG5cbiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4gXHQvLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbiBcdC8vIFByb21pc2UgPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG4gXHR2YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuIFx0XHRcIm1haW5cIjogMFxuIFx0fTtcblxuIFx0dmFyIGRlZmVycmVkTW9kdWxlcyA9IFtdO1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHR2YXIganNvbnBBcnJheSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSB8fCBbXTtcbiBcdHZhciBvbGRKc29ucEZ1bmN0aW9uID0ganNvbnBBcnJheS5wdXNoLmJpbmQoanNvbnBBcnJheSk7XG4gXHRqc29ucEFycmF5LnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjaztcbiBcdGpzb25wQXJyYXkgPSBqc29ucEFycmF5LnNsaWNlKCk7XG4gXHRmb3IodmFyIGkgPSAwOyBpIDwganNvbnBBcnJheS5sZW5ndGg7IGkrKykgd2VicGFja0pzb25wQ2FsbGJhY2soanNvbnBBcnJheVtpXSk7XG4gXHR2YXIgcGFyZW50SnNvbnBGdW5jdGlvbiA9IG9sZEpzb25wRnVuY3Rpb247XG5cblxuIFx0Ly8gYWRkIGVudHJ5IG1vZHVsZSB0byBkZWZlcnJlZCBsaXN0XG4gXHRkZWZlcnJlZE1vZHVsZXMucHVzaChbXCIuL3dwLWNvbnRlbnQvdGhlbWVzL3NoaW5lci9hc3NldHMvanMvbWFpbi5qc1wiLFwidmVuZG9yc35tYWluXCJdKTtcbiBcdC8vIHJ1biBkZWZlcnJlZCBtb2R1bGVzIHdoZW4gcmVhZHlcbiBcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIiwiaW1wb3J0ICcuLi9zY3NzL21haW4uc2Nzcyc7XG5pbXBvcnQgJy4uL3Njc3MvZWRpdG9yLnNjc3MnO1xuaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCAnYm9vdHN0cmFwL2Rpc3QvanMvYm9vdHN0cmFwLmJ1bmRsZS5qcyc7XG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xuaW1wb3J0IHsgaW50ZXJzZWN0aW9uT2JzZXJ2ZXIgfSBmcm9tICcuL3V0aWxpdGllcyc7XG5cblxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xuICAkKCcjbW9iaWxlLW5hdi10b2dnbGUsICNtb2JpbGUtbmF2IGxpJykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICQoJyNtb2JpbGUtbmF2JykudG9nZ2xlQ2xhc3MoJ2hpZGRlbicpO1xuICB9KTtcblxuICBpbnRlcnNlY3Rpb25PYnNlcnZlcigpO1xuXG4gIGZ1bmN0aW9uIHNjcm9sbFRvKHNlbGVjdG9yLCBvZmZzZXQsIHNwZWVkKSB7XG4gICAgb2Zmc2V0ID0gdHlwZW9mIG9mZnNldCA9PT0gJ3VuZGVmaW5lZCcgPyAwIDogb2Zmc2V0O1xuICAgIHNwZWVkID0gdHlwZW9mIHNwZWVkID09PSAndW5kZWZpbmVkJyA/IDUwMCA6IHNwZWVkO1xuXG4gICAgaWYgKHR5cGVvZiBzZWxlY3RvciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiAkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7XG4gICAgICAgIHNjcm9sbFRvcDogMFxuICAgICAgfSwgc3BlZWQpLnByb21pc2UoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcbiAgICAgICAgc2Nyb2xsVG9wOiAkKHNlbGVjdG9yKS5vZmZzZXQoKS50b3AgLSBvZmZzZXRcbiAgICAgIH0sIHNwZWVkKS5wcm9taXNlKCk7XG4gICAgfVxuICB9XG5cbiAgLy8gSGVybyBsaW5rIHNjcm9sbFRvXG4gIGNvbnN0IGhlcm9MaW5rRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtaGVyby1saW5rJyk7XG4gIGlmIChoZXJvTGlua0VsKSB7XG4gICAgaGVyb0xpbmtFbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGNvbnN0IHNjcm9sbElEID0gaGVyb0xpbmtFbC5kYXRhc2V0LmlkO1xuICAgICAgY29uc3Qgc2Nyb2xsRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1zY3JvbGwtaWQ9JyArIHNjcm9sbElEICsgJ10nKTtcbiAgICAgIHNjcm9sbFRvKHNjcm9sbEVsLCA4MCk7XG4gICAgfSk7XG4gIH1cblxuICAvLyBIZXJvIGFuaW1hdGlvblxuICBpZiAoJCgnLmhlcm9fX2JhY2tncm91bmQnKS5sZW5ndGggPiAxKSB7XG5cbiAgICB2YXIgbnVtYnMgPSAkKCcuaGVyb19fYmFja2dyb3VuZCcpLmxlbmd0aDtcbiAgICB2YXIgaGVybyA9IFtdO1xuICAgIHZhciBjdXJOdW0gPSAwO1xuICAgIHZhciBkdXJhdGlvbiA9ICQoICcuaGVyb19fYmFja2dyb3VuZHMnICkuZGF0YSggXCJkdXJhdGlvblwiICk7XG4gICAgdmFyIGNyb3NzZmFkZSA9ICQoICcuaGVyb19fYmFja2dyb3VuZHMnICkuZGF0YSggXCJjcm9zc2ZhZGVcIiApO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW1iczsgaSsrKSB7XG4gICAgICBoZXJvLnB1c2goXCIjaGVyb1wiICsgaSk7XG4gICAgICBnc2FwLnNldChoZXJvWzBdLCAge2FscGhhOiAxfSk7XG4gICAgICBnc2FwLnNldChoZXJvW2ldLCAge3RyYW5zZm9ybU9yaWdpbjogJzUwJSA1MCUnfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc3RhcnRIZXJvKCkge1xuICAgICAgZ3NhcC5zZXQoaGVyb1tjdXJOdW1dLCAge3RyYW5zZm9ybTogJ3NjYWxlKDEpJ30pO1xuICAgICAgZ3NhcC50byhoZXJvW2N1ck51bV0sIGNyb3NzZmFkZSwge2FscGhhOiAxfSk7XG4gICAgICBnc2FwLnRvKGhlcm9bY3VyTnVtXSwgZHVyYXRpb24sIHt0cmFuc2Zvcm06ICdzY2FsZSgxLjI1KScsIGVhc2U6IFwibm9uZVwiICwgcm90YXRpb246MC4wMSwgYXV0b1JvdW5kOmZhbHNlfSk7XG5cbiAgICAgIGdzYXAuZGVsYXllZENhbGwoZHVyYXRpb24gLSBjcm9zc2ZhZGUsIG5leHRIZXJvKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBuZXh0SGVybygpIHtcbiAgICAgIC8vIGdzYXAudG8oaGVyb1tjdXJOdW1dLCAyLCB7YWxwaGE6IDAsJy13ZWJraXQtZmlsdGVyJzonYmx1cig1cHgpJywgJ2ZpbHRlcic6J2JsdXIoNXB4KSd9KTtcbiAgICAgIGdzYXAudG8oaGVyb1tjdXJOdW1dLCBjcm9zc2ZhZGUsIHthbHBoYTogMH0pO1xuICAgICAgY3VyTnVtKys7XG4gICAgICBpZiAoY3VyTnVtID49IG51bWJzKSB7XG4gICAgICAgIGN1ck51bSA9IDA7XG4gICAgICB9XG4gICAgICBzdGFydEhlcm8oKTtcbiAgICB9XG5cbiAgICBzdGFydEhlcm8oKTtcbiAgfSBlbHNlIGlmICgkKCcuaGVyb19fYmFja2dyb3VuZCcpLmxlbmd0aCA9PSAxKSB7XG4gICAgZ3NhcC5zZXQoJy5oZXJvX19iYWNrZ3JvdW5kJywgIHthbHBoYTogMX0pO1xuICB9XG5cbiAgJCgnLm93bC1jYXJvdXNlbCcpLm93bENhcm91c2VsKHtcbiAgICAgIGl0ZW1zOjEsXG4gICAgICBuYXY6dHJ1ZSxcbiAgICAgIG5hdlRleHQ6IFtcIjxzcGFuPjwvc3Bhbj5cIiwgXCI8c3Bhbj48L3NwYW4+XCJdLFxuICAgICAgbG9vcDp0cnVlLFxuICAgICAgY2VudGVyOmZhbHNlLFxuICAgICAgbWFyZ2luOjEwLFxuICAgICAgc3RhZ2VQYWRkaW5nOiAyNTAsXG4gICAgICBVUkxoYXNoTGlzdGVuZXI6dHJ1ZSxcbiAgICAgIGF1dG9wbGF5SG92ZXJQYXVzZTp0cnVlLFxuICAgICAgc3RhcnRQb3NpdGlvbjogJ1VSTEhhc2gnLFxuICAgICAgcmVzcG9uc2l2ZTp7XG4gICAgICAgIDA6e1xuICAgICAgICAgIHN0YWdlUGFkZGluZzogNTBcbiAgICAgICAgfSxcbiAgICAgICAgNzY3OntcbiAgICAgICAgICBzdGFnZVBhZGRpbmc6IDEwMFxuICAgICAgICB9LFxuICAgICAgICA5OTE6e1xuICAgICAgICAgIHN0YWdlUGFkZGluZzogMTUwXG4gICAgICAgIH0sXG4gICAgICAgIDExOTk6e1xuICAgICAgICAgIHN0YWdlUGFkZGluZzogMjAwXG4gICAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG5cbiAgaWYoJCgnI3NwbGlkZU1haW4nKS5sZW5ndGgpe1xuICAgIHZhciBwcmltYXJ5TWFpbiA9IG5ldyBTcGxpZGUoICcjc3BsaWRlTWFpbicsIHtcbiAgICAgIHR5cGU6ICdsb29wJyxcbiAgICAgIHBlclBhZ2U6IDEsXG4gICAgICBwZXJNb3ZlOiAxLFxuICAgICAgcGFnaW5hdGlvbjogZmFsc2UsXG4gICAgICBwYWRkaW5nOiAnMTAlJyxcbiAgICAgIGVhc2luZzogJ2N1YmljLWJlemllcigwLjQyLCAwLCAxLCAxKScsXG4gICAgICBhdXRvSGVpZ2h0OiB0cnVlLFxuICAgICAgc3BlZWQ6IDUwMFxuICAgIH0gKTtcbiAgICBwcmltYXJ5TWFpbi5tb3VudCggd2luZG93LnNwbGlkZS5FeHRlbnNpb25zICk7XG4gIH1cblxuXG4gIGlmKCQoJyNzcGxpZGVWZXJ0JykubGVuZ3RoKXtcbiAgICAkKCcuc3BsaWRlVmVydCcpLmVhY2goZnVuY3Rpb24oa2V5LCBpdGVtKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcInNsaWRlciBzbGlkZXJzXCIpO1xuICAgIH0pO1xuICB9XG5cbn0pO1xuXG5cblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7XG5cblxuXG4gIGlmKCQoJy5zcGxpZGVWZXJ0JykubGVuZ3RoKXtcbiAgICAkKCcuc3BsaWRlVmVydCcpLmVhY2goZnVuY3Rpb24oa2V5LCBpdGVtKSB7XG4gICAgICAvLyB2YXIgcHJpbWFyeSA9IFtdO1xuICAgICAgdmFyIGRhdGFMYXllciA9ICQodGhpcykuZGF0YSgndGFyZ2V0Jyk7XG4gICAgICBjb25zb2xlLmxvZyhkYXRhTGF5ZXIpO1xuXG4gICAgICB2YXIgcHJpbWFyeSA9IG5ldyBTcGxpZGUoIGRhdGFMYXllciwge1xuICAgICAgICBkaXJlY3Rpb246ICd0dGInLFxuICAgICAgICBnYXAgOiAnMS41cmVtJyxcbiAgICAgICAgcGFnaW5hdGlvbjogZmFsc2UsXG4gICAgICAgIGhlaWdodDogJ2NhbGMoKDEwMHZ3LzEuMTE1KS8oMTYvOSkpJyxcbiAgICAgICAgZWFzaW5nOiAnY3ViaWMtYmV6aWVyKDAuNDIsIDAsIDEsIDEpJyxcbiAgICAgICAgc3BlZWQ6IDUwMFxuICAgICAgfSApO1xuICAgICAgcHJpbWFyeS5tb3VudCgpO1xuXG4gICAgICAvLyB2YXIgc2xpZGVySWROYW1lID0gJ3NsaWRlcicgKyBrZXk7XG5cdCAgXHQvLyB2YXIgc2xpZGVyTmF2SWROYW1lID0gJ2dhbGxlcmlqbmF2JyArIGtleTtcbiAgICAgIC8vXG5cdCAgXHQvLyB0aGlzLmlkID0gc2xpZGVySWROYW1lO1xuXHQgIFx0Ly8gJCgnI3NwbGlkZVZlcnQnKVtrZXldLmlkID0gc2xpZGVyTmF2SWROYW1lO1xuICAgICAgLy9cblx0ICBcdC8vIHZhciBzbGlkZXJJZCA9ICcjJyArIHNsaWRlcklkTmFtZTtcblx0ICBcdC8vIHZhciBzbGlkZXJOYXZJZCA9ICcjJyArIHNsaWRlck5hdklkTmFtZTtcbiAgICAgIC8vXG4gICAgICAvLyBjb25zb2xlLmxvZyhzbGlkZXJJZCk7XG4gICAgICAvL1xuICAgICAgLy8gdmFyIHByaW1hcnkgPSBuZXcgU3BsaWRlKCAnI3NwbGlkZVZlcnQnLCB7XG4gICAgICAvLyAgIGRpcmVjdGlvbjogJ3R0YicsXG4gICAgICAvLyAgIGdhcCA6ICcxLjVyZW0nLFxuICAgICAgLy8gICBwYWdpbmF0aW9uOiBmYWxzZSxcbiAgICAgIC8vICAgaGVpZ2h0OiAnY2FsYygoMTAwdncvMS4wOSkvKDE2LzkpKScsXG4gICAgICAvLyAgIGVhc2luZzogJ2N1YmljLWJlemllcigwLjQyLCAwLCAxLCAxKScsXG4gICAgICAvLyAgIHNwZWVkOiA1MDBcbiAgICAgIC8vIH0gKTtcbiAgICAgIC8vIHByaW1hcnkubW91bnQoKTtcbiAgICB9KTtcbiAgfVxuXG59ICk7XG4iLCJleHBvcnQgY29uc3QgaW50ZXJzZWN0aW9uT2JzZXJ2ZXIgPSAoKSA9PiB7XG4gIC8vIENoZWNrIGlmIEludGVyc2VjdGlvbk9ic2VydmVyIGlzIG5vdCBzdXBwb3J0ZWRcbiAgaWYgKCEnSW50ZXJzZWN0aW9uT2JzZXJ2ZXInIGluIHdpbmRvdyAmJlxuICAgICEnSW50ZXJzZWN0aW9uT2JzZXJ2ZXJFbnRyeScgaW4gd2luZG93ICYmXG4gICAgISdpbnRlcnNlY3Rpb25SYXRpbycgaW4gd2luZG93LkludGVyc2VjdGlvbk9ic2VydmVyRW50cnkucHJvdG90eXBlKSB7XG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKCduby1vYnNlcnZlci1zdXBwb3J0Jyk7XG4gIH0gZWxzZSB7XG4gICAgLy8gSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgaXMgc3VwcG9ydGVkXG4gICAgZnVuY3Rpb24gaGFuZGxlSW50ZXJzZWN0aW9uKGVudHJpZXMpIHtcbiAgICAgIGVudHJpZXMubWFwKChlbnRyeSkgPT4ge1xuICAgICAgICBpZihlbnRyeS5pc0ludGVyc2VjdGluZykge1xuICAgICAgICAgIGVudHJ5LnRhcmdldC5jbGFzc0xpc3QuYWRkKCd2aXNpYmxlJyk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICBcbiAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihoYW5kbGVJbnRlcnNlY3Rpb24pO1xuICAgIGNvbnN0IG9ic2VydmVyRWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmpzLW9ic2VydmUnKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IG9ic2VydmVyRWxzLmZvckVhY2goKGVsKSA9PiBvYnNlcnZlci5vYnNlcnZlKGVsKSkpO1xuICB9XG59O1xuIiwiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4iLCIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbiIsIm1vZHVsZS5leHBvcnRzID0galF1ZXJ5OyJdLCJzb3VyY2VSb290IjoiIn0=